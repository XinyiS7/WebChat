# 文件名：processing.pyimport datetimeimport osfrom django.conf import settingsfrom .api_utils.shortchat import query_deepseek_api_modelfrom .api_utils.longchat import query_deepseek_api_model_longdef process_long_text(text, mode="chat", history=None):    """       最终版处理函数（兼容新旧调用方式）       :param text: 用户的最新消息       :param mode: 网页提交的模式，并非真正的模式切换，而只是prompt指定       :param history: 可选参数，如果不传则退化为无上下文模式       """    try:        api_key = settings.DEEPSEEK_API_KEY        if not api_key:            return "错误：未配置API密钥"        # 如果传入了history，则使用增强版API调用        if history is not None:            return query_deepseek_api_model_long(text, api_key, mode, history)        # 兼容旧版本的无上下文调用        return query_deepseek_api_model(text, api_key, mode)    except Exception as e:        import traceback        traceback.print_exc()  # 打印完整错误栈        return f"处理文本时出错: {str(e)}\n{traceback.format_exc()}"def process_text_model(text, mode="chat"):    """    处理文本并返回DeepSeek API的响应    处理mode切换    这里的mode是在被view文件调用时，由上一级函数传入的，从网页表单获取的值    """    # print(mode)    try:        api_key = settings.DEEPSEEK_API_KEY        if not api_key:            return "错误：未配置API密钥"        return query_deepseek_api_model(text, api_key, mode)    except Exception as e:        # 返回更详细的错误信息        return f"处理文本时出错: {str(e)}"'''def string_process(input_string):    """    处理输入字符串：    - 打印长度    - 打印前100字符（不足则全打印）    - 保存完整字符串到以当前日期时间命名的txt文件    - 打印文件的保存路径    """    # 打印字符串长度    print(f"\n字符串长度：{len(input_string)}")    # 打印前100个字符    preview = input_string[:100]    print("\n字符串的前100个字符如下：")    print(preview)    # 获取当前时间并格式化为合法的文件名    now = datetime.datetime.now()    timestamp = now.strftime("%Y-%m-%d_%H-%M-%S")    filename = f"{timestamp}.txt"    # 保存文件并打印路径    try:        with open(filename, 'w', encoding='utf-8') as file:            file.write(input_string)        full_path = os.path.abspath(filename)        print(f"\n字符串已成功保存至文件：{full_path}")    except Exception as e:        print(f"\n保存文件时出错：{e}")'''# 示例调用（仅测试用）if __name__ == "__main__":    sample1 = "这是一个测试字符串，用于展示如何保存带有时间戳的文件名。" * 3    sample2 = "hier sind die test-string"    process_text_model(sample2, 'chat')